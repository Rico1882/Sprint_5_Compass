{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 10,
    "pending": 0,
    "failures": 3,
    "start": "2022-09-10T22:57:06.808Z",
    "end": "2022-09-10T22:57:45.566Z",
    "duration": 7519,
    "testsRegistered": 13,
    "passPercent": 76.92307692307692,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "82c2b79e-3470-4eea-8658-c4ab5cf124c4",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "27f725dc-8458-4136-b758-54d2807b2899",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com suscesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com suscesso",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "34395c94-cf18-4a37-aeb3-6e250db3b188",
              "parentUUID": "27f725dc-8458-4136-b758-54d2807b2899",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem suscesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem suscesso",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginSemSucesso().then(res => {\n  cy.contractValidation(res, \"get-login\", 401); //login com email e senha invalidos          \n  _validaServerest.default.validaLoginSemSucesso(res);\n});",
              "err": {},
              "uuid": "01301c5e-3aee-4811-aec8-56919a17cd3c",
              "parentUUID": "27f725dc-8458-4136-b758-54d2807b2899",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34395c94-cf18-4a37-aeb3-6e250db3b188",
            "01301c5e-3aee-4811-aec8-56919a17cd3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b937152f-5ff5-4562-8253-12af96e9305f",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "02eaeb66-a020-48f0-ac94-c37f55c88ae9",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "061f2a00-a198-448c-995a-1323362763f5",
              "parentUUID": "02eaeb66-a020-48f0-ac94-c37f55c88ae9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1cd43995-f9ba-4a8e-9390-b757faa0bfed",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 635,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "9cef4896-a117-4fa3-a9e6-2d7356f56f90",
                  "parentUUID": "1cd43995-f9ba-4a8e-9390-b757faa0bfed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 683,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, \"delete-produtos{_id}\", 200);\n  expect(res.body.message).to.be.equal('Registro excluÃ­do com sucesso');\n});",
                  "err": {},
                  "uuid": "6f808a79-3583-4c81-9e7d-9928b6e559f1",
                  "parentUUID": "1cd43995-f9ba-4a8e-9390-b757faa0bfed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9cef4896-a117-4fa3-a9e6-2d7356f56f90",
                "6f808a79-3583-4c81-9e7d-9928b6e559f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1318,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "061f2a00-a198-448c-995a-1323362763f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6bec1222-2c25-49fd-8884-ef254b8f99e4",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40369bde-4f12-4dc0-9b8a-05940828ef59",
          "title": "Casos de teste sobre a rota /Carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /Carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados na serverest",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  cy.contractValidation(res, \"get-carrinhos\", 200);\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "dc6d6c01-a23a-4bf5-8a4e-c12cbc43be0c",
              "parentUUID": "40369bde-4f12-4dc0-9b8a-05940828ef59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc6d6c01-a23a-4bf5-8a4e-c12cbc43be0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 353,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd11b491-af97-4050-bf20-be9aa24bee62",
          "title": "Logar com sucesso",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve Criar um novo carrinho com sucesso",
              "fullTitle": "Logar com sucesso Deve Criar um novo carrinho com sucesso",
              "timedOut": null,
              "duration": 1253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  _validaServerest.default.validarCarrinhoComSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected undefined to be a string",
                "estack": "AssertionError: expected undefined to be a string\n    at Function.validarCarrinhoComSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\4.carrinhos.spec.js:382:37)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\4.carrinhos.spec.js:196:32)",
                "diff": null
              },
              "uuid": "093f26a4-9726-4fd3-831e-1353c63248ae",
              "parentUUID": "fd11b491-af97-4050-bf20-be9aa24bee62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um carrinho com sucesso",
              "fullTitle": "Logar com sucesso Deve deletar um carrinho com sucesso",
              "timedOut": null,
              "duration": 1252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.deletarCarrinhoCadastrado().then(res => {\n  cy.contractValidation(res, \"delete-carrinhos-concluir-compra\", 200);\n  expect(res.body.message).to.be.equal('Nenhum registro excluÃ­do');\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://serverest.dev/carrinhos/undefined\n\nThe response we received from your web server was:\n\n  > 405: Method Not Allowed\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: DELETE\nURL: https://serverest.dev/carrinhos/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.7.0 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjYyODUwNjY0LCJleHAiOjE2NjI4NTEyNjR9.RZ2qTWDKxuXKBtd7u0Cj5P8zd00s50e7cYpYhu85CEE\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 405 - Method Not Allowed\nHeaders: {\n  \"access-control-allow-origin\": \"*\",\n  \"x-dns-prefetch-control\": \"off\",\n  \"x-frame-options\": \"SAMEORIGIN\",\n  \"strict-transport-security\": \"max-age=15552000; includeSubDomains\",\n  \"x-download-options\": \"noopen\",\n  \"x-content-type-options\": \"nosniff\",\n  \"x-xss-protection\": \"1; mode=block\",\n  \"x-moesif-transaction-id\": \"7673a4a5-b8ea-4b83-9846-3ebc30603f9b\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"x-cloud-trace-context\": \"a5ee1485d7f5c0c8312b8454c236f444\",\n  \"date\": \"Sat, 10 Sep 2022 22:57:45 GMT\",\n  \"server\": \"Google Frontend\",\n  \"content-length\": \"160\"\n}\nBody: {\n  \"message\": \"NÃ£o Ã© possÃ­vel realizar DELETE em /carrinhos/undefined. Acesse https://serverest.dev para ver as rotas disponÃ­veis e como utilizÃ¡-las.\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://serverest.dev/carrinhos/undefined\n\nThe response we received from your web server was:\n\n  > 405: Method Not Allowed\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: DELETE\nURL: https://serverest.dev/carrinhos/undefined\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.7.0 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjYyODUwNjY0LCJleHAiOjE2NjI4NTEyNjR9.RZ2qTWDKxuXKBtd7u0Cj5P8zd00s50e7cYpYhu85CEE\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-length\": 0\n}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 405 - Method Not Allowed\nHeaders: {\n  \"access-control-allow-origin\": \"*\",\n  \"x-dns-prefetch-control\": \"off\",\n  \"x-frame-options\": \"SAMEORIGIN\",\n  \"strict-transport-security\": \"max-age=15552000; includeSubDomains\",\n  \"x-download-options\": \"noopen\",\n  \"x-content-type-options\": \"nosniff\",\n  \"x-xss-protection\": \"1; mode=block\",\n  \"x-moesif-transaction-id\": \"7673a4a5-b8ea-4b83-9846-3ebc30603f9b\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"x-cloud-trace-context\": \"a5ee1485d7f5c0c8312b8454c236f444\",\n  \"date\": \"Sat, 10 Sep 2022 22:57:45 GMT\",\n  \"server\": \"Google Frontend\",\n  \"content-length\": \"160\"\n}\nBody: {\n  \"message\": \"NÃ£o Ã© possÃ­vel realizar DELETE em /carrinhos/undefined. Acesse https://serverest.dev para ver as rotas disponÃ­veis e como utilizÃ¡-las.\"\n}\n\n\nhttps://on.cypress.io/request\n    at https://serverest.dev/__cypress/runner/cypress_runner.js:165434:80\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://serverest.dev/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://serverest.dev/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Function.validaLoginComSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\4.carrinhos.spec.js:349:5)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\4.carrinhos.spec.js:188:34)",
                "diff": null
              },
              "uuid": "8e5ba109-ae92-4f10-a0e4-88b1a7d7f7ba",
              "parentUUID": "fd11b491-af97-4050-bf20-be9aa24bee62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "093f26a4-9726-4fd3-831e-1353c63248ae",
            "8e5ba109-ae92-4f10-a0e4-88b1a7d7f7ba"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2505,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7d2802af-313a-4bb9-98bb-5dcb2da42d3e",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados na serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados na serverest",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.log('SerÃ¡ validado o contrato');\n  cy.contractValidation(res, \"get-usuarios\", 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "d28c5f66-6db3-48d3-847a-de5af4eb2a9a",
              "parentUUID": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "NÃ£o deve postar um novo usuÃ¡rio administrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest NÃ£o deve postar um novo usuÃ¡rio administrador existente",
              "timedOut": null,
              "duration": 739,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, \"post-usuarios\", 400);\n  expect(res.body.message).to.be.eq('Este email jÃ¡ estÃ¡ sendo usado');\n});",
              "err": {
                "message": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Este email jÃ¡ estÃ¡ sendo usado'",
                "estack": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Este email jÃ¡ estÃ¡ sendo usado'\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\1.usuarios.spec.js:185:38)",
                "diff": "- 'Cadastro realizado com sucesso'\n+ 'Este email jÃ¡ estÃ¡ sendo usado'\n"
              },
              "uuid": "bfca228a-3f8c-416f-b7ae-60de3ceedbee",
              "parentUUID": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com suscesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com suscesso",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuariosParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validaLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "fdd7ad48-98f1-4980-a9d2-5a46d87259de",
              "parentUUID": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuÃ¡rio em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuÃ¡rio em um arquivo json",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let qtd_usuarios = res.body.quantidade;\n  let inteiro = _factory.default.gerarInteiroAleatorio();\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "46292b6f-a0f9-4e29-9a95-fb9dc1986160",
              "parentUUID": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuÃ¡rio de uma arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuÃ¡rio de uma arquivo json",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n});",
              "err": {},
              "uuid": "39232bed-41a0-4491-a2ca-f41972a2a8e9",
              "parentUUID": "6cce5035-94b0-4e0a-b220-1f5f991b335e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d28c5f66-6db3-48d3-847a-de5af4eb2a9a",
            "fdd7ad48-98f1-4980-a9d2-5a46d87259de",
            "46292b6f-a0f9-4e29-9a95-fb9dc1986160",
            "39232bed-41a0-4491-a2ca-f41972a2a8e9"
          ],
          "failures": [
            "bfca228a-3f8c-416f-b7ae-60de3ceedbee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}